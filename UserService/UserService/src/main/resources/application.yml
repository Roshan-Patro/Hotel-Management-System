#Server's the port number (Customized)
server:
  port: 8811
  
spring:
  application:
    name: USER-SERVICE
    
#spring.profiles.active=dev

#Database related properties
  datasource:
    url: jdbc:mysql://${BD_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:hotelmanagement}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:Patro@1997}
    
#ORM s/w specific properties
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  config:
    import:
    - optional:configserver:http://localhost:8815

#spring security client configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-03494354.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
           provider: okta
           authorization-grant-type: client_credentials
           scope: internal
           client-id: 0oa9j9tpvz3hCRgq25d7
           client-secret: SQiDMbSNGRez-reWzucnbLr3moqdI2ihbujpq3sT
           
        provider:
          okta:
           issuer-uri: https://dev-03494354.okta.com/oauth2/default
           
#eureka.instance.prefer-ip-address=true
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#Actuator config
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
        - health
  endpoint:
    health:
      show-details: always

#Resilience4j Circuitbreaker config
resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

#Resilience4J Retry config
  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s
        
#Resilience4J Ratelimiter config
  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 2s
        
okta:
  oauth2:
    issuer: https://dev-03494354.okta.com/oauth2/default
    audience: api://default